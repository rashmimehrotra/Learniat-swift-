# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.30.2"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    
    
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    gym # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
  desc "Builds the project and produces an .ipa. Pass in the build_number as a param. Default is 1."
desc "Docs on how to pass in parameters are here: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Advanced.md#passing-parameters"
lane :build do |options|
	# Set default build number for local builds
	build_number = "1"

	# Read in value in case the user has specified input params
	if options[:build_number]
		build_number = options[:build_number]
	end

	increment_build_number(
  		build_number: build_number,
  		xcodeproj: "src/" + ENV["PROJECT"]
	)

	increment_version_number(
 		version_number: ENV["VERSION"],
  		xcodeproj: "src/" + ENV["PROJECT"]
	)

	# Build additional args to xcodebuild
	xcodeargs = "PRODUCT_BUNDLE_IDENTIFIER=" + ENV["BUNDLE_ID"]
	if ENV["PROVISIONING_PROFILE"]
		xcodeargs = xcodeargs + " " + "PROVISIONING_PROFILE=" + ENV["PROVISIONING_PROFILE"]
	end

	args = {
		scheme: ENV["SCHEME"],
		clean: true,
		output_directory: "/Users/administrator/Documents/IPA files/â€œ,
		output_name: ENV["PRODUCT_NAME"].dup, # Fastlane probably modifies this string under the hood, so the .dup is needed to make it mutable.
		codesigning_identity: ENV["CERTIFICATE"],
		xcargs: xcodeargs,
		use_legacy_build_api: true # There are issues with the build if this isn't set. Try removing on Xcode 8 and see if it works.
	}

	if ENV["WORKSPACE"]
		args[:workspace] = "src/" + ENV["WORKSPACE"]
	else
		args[:project] = "src/" + ENV["PROJECT"]
	end

	gym(args)
end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
